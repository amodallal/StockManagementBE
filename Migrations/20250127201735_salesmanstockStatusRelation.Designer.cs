// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockManagement.Data;

#nullable disable

namespace StockManagement.Migrations
{
    [DbContext(typeof(StockManagementContext))]
    [Migration("20250127201735_salesmanstockStatusRelation")]
    partial class salesmanstockStatusRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapacityItem", b =>
                {
                    b.Property<int>("CapacitiesCapacityID")
                        .HasColumnType("int");

                    b.Property<int>("ItemsItemId")
                        .HasColumnType("int");

                    b.HasKey("CapacitiesCapacityID", "ItemsItemId");

                    b.HasIndex("ItemsItemId");

                    b.ToTable("ItemCapacity", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("brand_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("brand_name");

                    b.HasKey("BrandId")
                        .HasName("PK__brand__5E5A8E276F139381");

                    b.ToTable("brand", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Capacity", b =>
                {
                    b.Property<int>("CapacityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CapacityID"));

                    b.Property<string>("CapacityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CapacityID");

                    b.ToTable("Capacities");
                });

            modelBuilder.Entity("StockManagement.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId")
                        .HasName("PK__category__D54EE9B4F809BF32");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ColorId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("StockManagement.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("CustomerId")
                        .HasName("PK__customer__CD65CB85C0327932");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("delivery_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<decimal>("CashCollected")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cash_collected");

                    b.Property<DateOnly?>("DeliveryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("delivery_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("Status_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Pending")
                        .HasColumnName("delivery_status");

                    b.HasKey("DeliveryId")
                        .HasName("PK__deliveri__1C5CF4F59A1F4DEC");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OrderId");

                    b.ToTable("deliveries", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Description", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("description_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DescriptionId"));

                    b.Property<string>("DescriptionText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description_text");

                    b.HasKey("DescriptionId")
                        .HasName("PK__descript__DF380AEACC0A86AA");

                    b.ToTable("description", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("EmployeeId")
                        .HasName("PK__employee__C52E0BA887EC62D3");

                    b.HasIndex("RoleId");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("barcode");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("brand_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsImeiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("model_number");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("ItemId")
                        .HasName("PK__items__52020FDD3A5A8C0E");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.ItemDetail", b =>
                {
                    b.Property<int>("ItemDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_details_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemDetailsId"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cost");

                    b.Property<DateOnly?>("DateReceived")
                        .HasColumnType("date")
                        .HasColumnName("date_received");

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int")
                        .HasColumnName("description_id");

                    b.Property<string>("Imei1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imei_1");

                    b.Property<string>("Imei2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imei_2");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("sale_price");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("serial_number");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("ItemDetailsId")
                        .HasName("PK__item_det__3213E83FC73542C3");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("item_details", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.ItemSupplier", b =>
                {
                    b.Property<int>("ItemSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemSupplierId"));

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ItemSupplierId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ItemSupplier");
                });

            modelBuilder.Entity("StockManagement.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<DateOnly?>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<int?>("Status_Id")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total amount");

                    b.HasKey("OrderId")
                        .HasName("PK__orders__4659622907CDD9A3");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Status_Id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.OrderedItem", b =>
                {
                    b.Property<int>("OrderedItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ordered_item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderedItemId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("discount");

                    b.Property<int>("ItemDetailsId")
                        .HasColumnType("int")
                        .HasColumnName("item_details_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("OrderedItemId")
                        .HasName("PK__ordered___F43DC48BD93B8A99");

                    b.HasIndex("ItemDetailsId");

                    b.HasIndex("OrderId");

                    b.ToTable("ordered_items", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__roles__760965CCCC34A350");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.SalesmanStock", b =>
                {
                    b.Property<int>("ItemDetailsId")
                        .HasColumnType("int")
                        .HasColumnName("item_details_id");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cost");

                    b.Property<DateOnly>("DateReceived")
                        .HasColumnType("date")
                        .HasColumnName("date_received");

                    b.Property<int>("DescriptionId")
                        .HasColumnType("int")
                        .HasColumnName("description_id");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("Imei1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("imei_1");

                    b.Property<string>("Imei2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("imei_2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("sale_price");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("serial_number");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("ItemDetailsId")
                        .HasName("PK__salesman__7D6D00AEBDF35074");

                    b.HasIndex("ItemId");

                    b.HasIndex("StatusId");

                    b.ToTable("salesman_stock", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Status", b =>
                {
                    b.Property<int>("status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("status_id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("status_id")
                        .HasName("PK__status__3213E83F9BA64F51");

                    b.ToTable("status", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("supplier_name");

                    b.HasKey("SupplierId")
                        .HasName("PK__supplier__6EE594E800C8141D");

                    b.ToTable("supplier", (string)null);
                });

            modelBuilder.Entity("StockManagement.Models.TransfersHistory", b =>
                {
                    b.Property<int>("TransferHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transfer_history_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferHistoryId"));

                    b.Property<DateTime>("DateTransfered")
                        .HasColumnType("datetime")
                        .HasColumnName("date_transfered");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("destination");

                    b.Property<string>("IMEI1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("imei1");

                    b.Property<string>("IMEI2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("imei2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("note");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("serial_number");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("source");

                    b.HasKey("TransferHistoryId")
                        .HasName("PK_TransfersHistory");

                    b.HasIndex("ItemId");

                    b.ToTable("transfers_history", (string)null);
                });

            modelBuilder.Entity("CapacityItem", b =>
                {
                    b.HasOne("StockManagement.Models.Capacity", null)
                        .WithMany()
                        .HasForeignKey("CapacitiesCapacityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockManagement.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StockManagement.Models.Delivery", b =>
                {
                    b.HasOne("StockManagement.Models.Employee", "Employee")
                        .WithMany("Deliveries")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__deliverie__emplo__6A30C649");

                    b.HasOne("StockManagement.Models.Order", "Order")
                        .WithMany("Deliveries")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__deliverie__order__693CA210");

                    b.Navigation("Employee");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("StockManagement.Models.Employee", b =>
                {
                    b.HasOne("StockManagement.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__employees__role___3B75D760");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("StockManagement.Models.Item", b =>
                {
                    b.HasOne("StockManagement.Models.Brand", "Brand")
                        .WithMany("Items")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_Items_Brand");

                    b.HasOne("StockManagement.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Items_Category");

                    b.HasOne("StockManagement.Models.Color", "Color")
                        .WithMany("Items")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("StockManagement.Models.ItemDetail", b =>
                {
                    b.HasOne("StockManagement.Models.Description", "Description")
                        .WithMany("ItemDetails")
                        .HasForeignKey("DescriptionId")
                        .HasConstraintName("fk_item_details_description");

                    b.HasOne("StockManagement.Models.Item", "Item")
                        .WithMany("ItemDetails")
                        .HasForeignKey("ItemId");

                    b.HasOne("StockManagement.Models.Supplier", "Supplier")
                        .WithMany("ItemDetails")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("fk_supplier_id");

                    b.Navigation("Description");

                    b.Navigation("Item");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StockManagement.Models.ItemSupplier", b =>
                {
                    b.HasOne("StockManagement.Models.Item", "Item")
                        .WithMany("ItemSuppliers")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockManagement.Models.Supplier", "Supplier")
                        .WithMany("ItemSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StockManagement.Models.Order", b =>
                {
                    b.HasOne("StockManagement.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__orders__customer__5812160E");

                    b.HasOne("StockManagement.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__orders__employee__571DF1D5");

                    b.HasOne("StockManagement.Models.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("Status_Id")
                        .HasConstraintName("fk_orders_status");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("StockManagement.Models.OrderedItem", b =>
                {
                    b.HasOne("StockManagement.Models.SalesmanStock", "ItemDetails")
                        .WithMany("OrderedItems")
                        .HasForeignKey("ItemDetailsId")
                        .IsRequired()
                        .HasConstraintName("fk_item_details_id");

                    b.HasOne("StockManagement.Models.Order", "Order")
                        .WithMany("OrderedItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__ordered_i__order__6383C8BA");

                    b.Navigation("ItemDetails");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("StockManagement.Models.SalesmanStock", b =>
                {
                    b.HasOne("StockManagement.Models.Item", "Item")
                        .WithMany("SalesmanStocks")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("fk_salesman_stock_items");

                    b.HasOne("StockManagement.Models.Status", "Status")
                        .WithMany("SalesmanStocks")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("fk_salesman_stock_status");

                    b.Navigation("Item");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("StockManagement.Models.TransfersHistory", b =>
                {
                    b.HasOne("StockManagement.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TransfersHistory_Items");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("StockManagement.Models.Brand", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("StockManagement.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("StockManagement.Models.Color", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("StockManagement.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("StockManagement.Models.Description", b =>
                {
                    b.Navigation("ItemDetails");
                });

            modelBuilder.Entity("StockManagement.Models.Employee", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("StockManagement.Models.Item", b =>
                {
                    b.Navigation("ItemDetails");

                    b.Navigation("ItemSuppliers");

                    b.Navigation("SalesmanStocks");
                });

            modelBuilder.Entity("StockManagement.Models.Order", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("OrderedItems");
                });

            modelBuilder.Entity("StockManagement.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("StockManagement.Models.SalesmanStock", b =>
                {
                    b.Navigation("OrderedItems");
                });

            modelBuilder.Entity("StockManagement.Models.Status", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SalesmanStocks");
                });

            modelBuilder.Entity("StockManagement.Models.Supplier", b =>
                {
                    b.Navigation("ItemDetails");

                    b.Navigation("ItemSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
